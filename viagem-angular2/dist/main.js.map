{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/app/app.component.css","webpack:///./src/app/components/app/app.component.html","webpack:///./src/app/components/app/app.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/messages/messages.component.css","webpack:///./src/app/components/messages/messages.component.html","webpack:///./src/app/components/messages/messages.component.ts","webpack:///./src/app/components/travel-detail/travel-detail.component.css","webpack:///./src/app/components/travel-detail/travel-detail.component.html","webpack:///./src/app/components/travel-detail/travel-detail.component.ts","webpack:///./src/app/components/travel/travel.component.css","webpack:///./src/app/components/travel/travel.component.html","webpack:///./src/app/components/travel/travel.component.ts","webpack:///./src/app/components/user/user.component.css","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/entities/travel.ts","webpack:///./src/app/mocks/mock-aircrafts.ts","webpack:///./src/app/mocks/mock-travels.ts","webpack:///./src/app/mocks/mock-users.ts","webpack:///./src/app/services/message.service.ts","webpack:///./src/app/services/travel.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UserComponent }   from './components/user/user.component';\nimport { DashboardComponent }   from './components/dashboard/dashboard.component';\nimport { TravelComponent }      from './components/travel/travel.component';\nimport { TravelDetailComponent }  from './components/travel-detail/travel-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'travel', component: TravelComponent },\n  { path: 'detail/:id', component: TravelDetailComponent },\n  { path: 'user', component: UserComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { NgModule }       from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { FormsModule }    from '@angular/forms';\n\nimport { AppComponent }         from '././components/app/app.component';\nimport { DashboardComponent }   from './components/dashboard/dashboard.component';\nimport { MessagesComponent }    from './components/messages/messages.component';\n\nimport { AppRoutingModule }     from './app-routing.module';\nimport { TravelComponent } from './components/travel/travel.component';\nimport { TravelDetailComponent } from './components/travel-detail/travel-detail.component';\nimport { NgDatepickerModule } from 'ng2-datepicker';\nimport { Ng2DatetimePickerModule } from 'ng2-datetime-picker';\nimport { UserComponent } from './components/user/user.component';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    NgDatepickerModule,\n    Ng2DatetimePickerModule,\n    AppRoutingModule\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    TravelComponent,\n    MessagesComponent,\n    TravelDetailComponent,\n    UserComponent\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { \n\n\n\n\n}\n","module.exports = \"/* AppComponent's private CSS styles */\\nh1 {\\n  font-size: 1.2em;\\n  color: #999;\\n  margin-bottom: 0;\\n}\\nh2 {\\n  font-size: 2em;\\n  margin-top: 0;\\n  padding-top: 0;\\n}\\nnav a {\\n  padding: 5px 10px;\\n  text-decoration: none;\\n  margin-top: 10px;\\n  display: inline-block;\\n  background-color: #eee;\\n  border-radius: 4px;\\n}\\nnav a:visited, a:link {\\n  color: #607d8b;\\n}\\nnav a:hover {\\n  color: #039be5;\\n  background-color: #cfd8dc;\\n}\\nnav a.active {\\n  color: #039be5;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header col-md-8\\\">\\n          <h1><span routerLink=\\\"/dashboard\\\">Airline company</span> <small><b> Travel control</b></small></h1>\\n        </div>\\n          <div class=\\\"navbar-header navbar-right col-md-1\\\">\\n            <h1><i class=\\\"glyphicon glyphicon-user center\\\" routerLink=\\\"/user\\\"> Users</i></h1>\\n          </div>\\n          <div class=\\\"navbar-header navbar-right col-md-1\\\">\\n              <h1><i class=\\\"glyphicon glyphicon-list-alt center\\\" routerLink=\\\"/travel\\\"> Travels</i></h1>\\n          </div>\\n      </div>\\n  </nav>\\n\\n<router-outlet></router-outlet>\\n<!--<app-messages></app-messages>-->\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Travel Control';\n}\n","module.exports = \"/* DashboardComponent's private CSS styles */\\n[class*='col-'] {\\n  float: left;\\n  padding-right: 20px;\\n  padding-bottom: 20px;\\n}\\n[class*='col-']:last-of-type {\\n  padding-right: 0;\\n}\\na {\\n  text-decoration: none;\\n}\\n*, *:after, *:before {\\n  box-sizing: border-box;\\n}\\nh3 {\\n  text-align: center; margin-bottom: 0;\\n}\\nh4 {\\n  position: relative;\\n}\\n.grid {\\n  margin: 0;\\n}\\n.col-1-4 {\\n  width: 25%;\\n}\\n.module {\\n  padding: 20px;\\n  text-align: center;\\n  color: #eee;\\n  max-height: 120px;\\n  min-width: 120px;\\n  background-color: #607d8b;\\n  border-radius: 2px;\\n}\\n.module:hover {\\n  background-color: #eee;\\n  cursor: pointer;\\n  color: #607d8b;\\n}\\n.grid-pad {\\n  padding: 10px 0;\\n}\\n.grid-pad > [class*='col-']:last-of-type {\\n  padding-right: 20px;\\n}\\n@media (max-width: 600px) {\\n  .module {\\n    font-size: 10px;\\n    max-height: 75px; }\\n}\\n@media (max-width: 1024px) {\\n  .grid {\\n    margin: 0;\\n  }\\n  .module {\\n    min-width: 60px;\\n  }\\n}\\n\"","module.exports = \"<h3>Travel control</h3>\\n\\n<div class=\\\"col-md-12\\\">\\n  <div class=\\\"grid grid-pad\\\">\\n    <a *ngFor=\\\"let travel of travels\\\" class=\\\"col-1-4\\\"\\n        routerLink=\\\"/detail/{{travel.id}}\\\">\\n      <div class=\\\"module travel\\\">\\n        <h4>{{travel.destination}}</h4>\\n      </div>\\n    </a>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Travel } from '../../entities/travel';\nimport { TravelService } from '../../services/travel.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  travels: Travel[] = [];\n\n  constructor(private travelService: TravelService) { }\n\n  ngOnInit() {\n    this.getTravels();\n  }\n\n  getTravels(): void {\n    this.travelService.getTravels()\n      .subscribe(travels => this.travels = travels.slice(0, 20));\n  }\n}\n","module.exports = \"/* MessagesComponent's private CSS styles */\\nh2 {\\n  color: red;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-weight: lighter;\\n}\\nbody {\\n  margin: 2em;\\n}\\nbody, input[text], button {\\n  color: crimson;\\n  font-family: Cambria, Georgia;\\n}\\nbutton.clear {\\n  font-family: Arial;\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  cursor: hand;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #aaa;\\n  cursor: auto;\\n}\\nbutton.clear {\\n  color: #888;\\n  margin-bottom: 12px;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n  <h2>Messages</h2>\\n  <button class=\\\"clear\\\"\\n          (click)=\\\"messageService.clear()\\\">clear</button>\\n  <div *ngFor=\\\"let message of messageService.messages\\\"> {{message}} </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div *ngIf=\\\"travel\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n              <div class=\\\"container-fluid\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        \\n                    </div>\\n                  </div>\\n              </div>\\n\\n              <div class=\\\"container-fluid\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n\\n                        <div class=\\\"panel panel-default\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                              <h3 class=\\\"panel-title\\\"><b>{{ travel.destination | uppercase }} </b> Details</h3>\\n                            </div>\\n                            <div class=\\\"panel-body\\\">\\n                                <div class=\\\"row\\\">\\n\\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                        <label for=\\\"id\\\">ID</label>\\n                                        <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"id\\\" placeholder=\\\"ID\\\" value=\\\"{{ travel.id }}\\\">\\n                                    </div>\\n\\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                        <label for=\\\"origin\\\">ORIGIN</label>\\n                                        <input type=\\\"text\\\"  [(ngModel)]=\\\"travel.origin\\\" pattern=\\\"[a-zA-Z ]*\\\" value=\\\"{{ travel.origin }}\\\" class=\\\"form-control\\\" id=\\\"origin\\\" placeholder=\\\"ORIGIN\\\" >\\n                                    </div>\\n\\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                        <label for=\\\"destination\\\">DESTINATION</label>\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"travel.destination\\\" pattern=\\\"[a-zA-Z ]*\\\" class=\\\"form-control\\\" id=\\\"destination\\\" placeholder=\\\"DESTINATION\\\" value=\\\"{{ travel.destination }}\\\">\\n                                    </div>\\n\\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                            <label for=\\\"origin\\\">DATETIME</label>\\n                                            <input [(ngModel)]=\\\"travel.date\\\" class=\\\"form-control\\\" ng2-datetime-picker date-format=\\\"DD/MM/YYYY HH:mm\\\" parse-format=\\\"YYYY-MM-DD HH:mm:ss\\\" />\\n                                    </div>\\n\\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                        <label for=\\\"aircraft\\\">AIRCRAFT</label>\\n                                        <select  [(ngModel)]=\\\"travel.aircraft\\\" class=\\\"form-control\\\" id=\\\"aircraft\\\" placeholder=\\\"AIRCRAFT\\\">\\n                                          <option *ngFor=\\\"let aircraft of aircrafts\\\" > {{aircraft.name}}</option>\\n                                        </select>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                        <label for=\\\"user\\\">USER</label>\\n                                        <select  [(ngModel)]=\\\"travel.userName\\\" class=\\\"form-control\\\" id=\\\"userName\\\" placeholder=\\\"USERNAME\\\">\\n                                            <option *ngFor=\\\"let user of users\\\" > {{user.name}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        \\n                            <div class=\\\"row\\\">\\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                        <button class=\\\"form-control  pull-right btn btn-default\\\" routerLink=\\\"/dashboard\\\">Cancel</button>\\n                                    </div>    \\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                        <button class=\\\"form-control btn btn-primary\\\" (click)=\\\"goBack()\\\">Save</button>\\n                                    </div> \\n                            </div>\\n                                \\n                        \\n                        \\n                    </div>\\n                  </div>\\n              </div>\\n          </div>\\n        </div>\\n    </div>    \\n</div>\\n\\n<script type=\\\"javascript\\\">\\n        $(function () {                \\n        $('#datetimepicker2').datetimepicker();\\n        });\\n</script>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Travel }         from '../../entities/travel';\nimport { TravelService }  from '../../services/travel.service';\n\nimport { DatepickerOptions } from 'ng2-datepicker';\nimport * as enLocale from 'date-fns/locale/en';\nimport { Aircraft } from '../../entities/aircraft';\nimport { User } from '../../entities/user';\n\n\n\n@Component({\n  selector: 'app-travel-detail',\n  templateUrl: './travel-detail.component.html',\n  styleUrls: ['./travel-detail.component.css']\n})\nexport class TravelDetailComponent implements OnInit {\n  @Input() travel: Travel;\n  @Input() aircrafts: Aircraft[];\n  @Input() users: User[];\n  \n  constructor(\n    private route: ActivatedRoute,\n    private travelService: TravelService,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.getTravel();\n    this.getAircrafts();\n    this.getUsers();\n  }\n\n  getTravel(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.travelService.getTravel(id)\n      .subscribe(travel => this.travel = travel);\n  }\n\n  getAircrafts(): void {\n    this.travelService.getAircrafts()\n      .subscribe(aircrafts => this.aircrafts = aircrafts);\n  }\n\n  getUsers(): void {\n    this.travelService.getUsers()\n      .subscribe(users => this.users = users);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  options: DatepickerOptions = {\n    displayFormat: 'DD-MM-YYYY HH:mm:ss',\n    barTitleFormat: 'DD-MM-YYYY',\n    dayNamesFormat: 'dd',\n    firstCalendarDay: 0, // 0 - Sunday, 1 - Monday\n    locale: enLocale, \n    barTitleIfEmpty: 'Click to select a date',\n    placeholder: 'Click to select a date', // HTML input placeholder attribute (default: '')\n    addClass: 'form-control', // Optional, value to pass on to [ngClass] on the input field\n    addStyle: {}, // Optional, value to pass to [ngStyle] on the input field\n    fieldId: 'my-date-picker', // ID to assign to the input field. Defaults to datepicker-<counter>\n    useEmptyBarTitle: false, // Defaults to true. If set to false then barTitleIfEmpty will be disregarded and a date will always be shown \n  };\n  \n\n}\n\n","module.exports = \".modal-body {\\r\\n    height: 400px;\\r\\n  }\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group col-md-2 pull-right\\\">\\n                <h4><a data-toggle=\\\"modal\\\" data-target=\\\"#modal-travel\\\"><i class=\\\"pull-right glyphicon glyphicon-plus\\\">Add</i></a></h4>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-condensed table-bordered table-hover col-md-12\\\">\\n                <thead>\\n                    <tr class=\\\"info\\\">\\n                        <th>ID</th>\\n                        <th>Origin</th>\\n                        <th>Destination</th>\\n                        <th>Aircraft</th>\\n                        <th>Date</th>\\n                        <th>UserName</th>\\n                        <th>Edit</th>\\n                        <th>Remove</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let travel of travels\\\">\\n                        <td>{{travel.id}}</td>\\n                        <td>{{travel.origin}}</td>\\n                        <td>{{travel.destination}}</td>\\n                        <td>{{travel.aircraft}}</td>\\n                        <td>{{travel.date | date : \\\"medium\\\" }}</td>\\n                        <td>{{travel.userName}}</td>\\n                        <td><i routerLink=\\\"/detail/{{travel.id}}\\\" class=\\\"glyphicon glyphicon-edit\\\"></i></td>\\n                        <td><i (click)=\\\"goRemove(travel.id)\\\" class=\\\"glyphicon glyphicon-trash\\\"></i></td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n          </div>\\n      </div>\\n    </div>\\n</div>\\n\\n      \\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"modal-travel\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">New Travel</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-group col-md-12\\\">\\n                            <label for=\\\"origin\\\">ORIGIN</label>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"travel.origin\\\" value=\\\"{{ travel.origin }}\\\" class=\\\"form-control\\\" id=\\\"origin\\\" placeholder=\\\"ORIGIN\\\">\\n                    </div>\\n                    <div class=\\\"form-group col-md-12\\\">\\n                            <label for=\\\"destination\\\">DESTINATION</label>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"travel.destination\\\" value=\\\"{{ travel.destination }}\\\" class=\\\"form-control\\\" id=\\\"destination\\\" placeholder=\\\"DESTINATION\\\" value=\\\"\\\">\\n                    </div>\\n                    <div class=\\\"form-group col-md-12\\\">\\n                            <label for=\\\"date\\\">DATETIME</label>\\n                            <input class=\\\"form-control\\\" [(ngModel)]=\\\"travel.date\\\" value=\\\"{{ travel.date }}\\\" ng2-datetime-picker date-format=\\\"DD/MM/YYYY HH:mm\\\" parse-format=\\\"YYYY-MM-DD HH:mm:ss\\\" />\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-12\\\">\\n                        <label for=\\\"aircraft\\\">AIRCRAFT</label>\\n                        <select  class=\\\"form-control\\\" [(ngModel)]=\\\"travel.aircraft\\\" value=\\\"{{ travel.aircraft }}\\\" id=\\\"aircraft\\\" placeholder=\\\"AIRCRAFT\\\">\\n                          <option *ngFor=\\\"let aircraft of aircrafts\\\" > {{aircraft.name}}</option>\\n                        </select>\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-12\\\">\\n                        <label for=\\\"user\\\">USER</label>\\n                        <select   class=\\\"form-control\\\" [(ngModel)]=\\\"travel.userName\\\" value=\\\"{{ travel.userName }}\\\" id=\\\"userName\\\" placeholder=\\\"USERNAME\\\">\\n                            <option *ngFor=\\\"let user of users\\\" > {{user.name}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"goAdd(travel)\\\">Add</button>\\n            </div>\\n          </div>\\n    </div>\\n</div>\\n\\n\\n<script type=\\\"javascript\\\">\\n    $('#modal-travel').on('shown.bs.modal', function () {\\n        $('#myInput').focus()\\n    })\\n</script>\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Travel } from '../../entities/travel';\nimport { TravelService } from '../../services/travel.service';\nimport { DatepickerOptions } from 'ng2-datepicker';\nimport * as enLocale from 'date-fns/locale/en';\nimport { Aircraft } from '../../entities/aircraft';\nimport { User } from '../../entities/user';\n\n@Component({\n  selector: 'app-travel',\n  templateUrl: './travel.component.html',\n  styleUrls: ['./travel.component.css']\n})\nexport class TravelComponent implements OnInit {\n  travels: Travel[];\n  @Input() aircrafts: Aircraft[];\n  @Input() users: User[];\n  @Input() travel: Travel;\n\n  constructor(private travelService: TravelService) { }\n\n  \n  ngOnInit() {\n    this.getTravels();\n    this.getAircrafts();\n    this.getUsers();\n    \n    this.travel = new Travel();\n  }\n\n  getTravels(): void {\n    this.travelService.getTravels()\n    .subscribe(travels => this.travels = travels);\n  }\n\n  getAircrafts(): void {\n    this.travelService.getAircrafts()\n      .subscribe(aircrafts => this.aircrafts = aircrafts);\n  }\n\n  getUsers(): void {\n    this.travelService.getUsers()\n      .subscribe(users => this.users = users);\n  }\n\n  goAdd(obj): void {\n    var travel = new Travel;\n    travel.id = this.travels.length +1;\n    travel.userName = obj.userName;\n    travel.date = obj.date;\n    travel.origin = obj.origin;\n    travel.destination = obj.destination;\n    travel.aircraft = obj.aircraft;\n    this.travels.push(travel);\n  }\n\n  goRemove(id): void {\n    this.travels.splice(this.travels.indexOf(this.travels.find(x => x.id == id)),1);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-condensed table-bordered table-hover col-md-12\\\">\\n                <thead>\\n                    <tr class=\\\"info\\\">\\n                        <th>ID</th>\\n                        <th>Name</th>\\n                        <th>Phone</th>\\n                        <th>Address</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let user of users\\\">\\n                        <td>{{user.id}}</td>\\n                        <td>{{user.name}}</td>\\n                        <td>{{user.tel}}</td>\\n                        <td>{{user.end}}</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n          </div>\\n      </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { User } from '../../entities/user';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  users: User[] = [];\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  getUsers(): void {\n    this.userService.getUsers()\n      .subscribe(users => this.users = users.slice(0, 20));\n  }\n\n}\n","export class Travel {\n    id: number;\n    origin: string;\n    destination: string;\n    aircraft: string;\n    userName: string;\n    date: string;\n  }\n","import { Aircraft } from '../entities/aircraft';\n\nexport const AIRCRAFTS: Aircraft[] = [\n  { id: 1, name: 'AirBus 777' },\n  { id: 2, name: 'Embraer 175' }\n];","import { Travel } from '../entities/travel';\n\nexport const TRAVELS: Travel[] = [\n  { id: 1, origin: 'São Paulo',  destination: 'Fortaleza', aircraft: 'AirBus 777', userName: 'gulemes', date: '2018-04-21T18:25:43-05:00' },\n  { id: 2, origin: 'São Paulo',  destination: 'Belo Horizonte', aircraft: 'Embraer 175', userName: 'testeUser', date: '2018-04-21T18:25:43-05:00'  }\n];\n","import { User } from '../entities/user';\n\nexport const USERS: User[] = [\n  { id: 1, name: 'gulemes',tel: '999999999', end: 'rua 1' },\n  { id: 2, name: 'testeUser',tel: '88888888', end: 'rua 2' }\n];","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\n\nimport { Travel } from '../entities/travel';\nimport { TRAVELS } from '../mocks/mock-travels';\nimport { MessageService } from '../services/message.service';\nimport { Aircraft } from '../entities/aircraft';\nimport { AIRCRAFTS } from './../mocks/mock-aircrafts';\nimport { User } from '../entities/user';\nimport { USERS } from './../mocks/mock-users';\n\n@Injectable({ providedIn: 'root' })\nexport class TravelService {\n\n  constructor(private messageService: MessageService) { }\n\n  getTravels(): Observable<Travel[]> {\n    this.messageService.add('TravelService: fetched travels');\n    return of(TRAVELS);\n  }\n\n  getTravel(id: number): Observable<Travel> {\n    this.messageService.add(`TravelService: fetched travel id=${id}`);\n    return of(TRAVELS.find(Travel => Travel.id === id));\n  }\n\n  getAircrafts(): Observable<Aircraft[]> {\n    this.messageService.add('TravelService: fetched aircrafts');\n    return of(AIRCRAFTS);\n  }\n\n  getUsers(): Observable<User[]> {\n    this.messageService.add('TravelService: fetched users');\n    return of(USERS);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { User } from '../entities/user';\nimport { USERS } from '../mocks/mock-users';\nimport { MessageService } from '../services/message.service';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private messageService: MessageService) { }\n\n  getUsers(): Observable<User[]> {\n    this.messageService.add('TravelService: fetched users');\n    return of(USERS);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}